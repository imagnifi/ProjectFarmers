package ru.imagnifi.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Farmer service. Represents a row in the &quot;imagnifi_farmer&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link ru.imagnifi.model.impl.FarmerModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ru.imagnifi.model.impl.FarmerImpl}.
 * </p>
 *
 * @author imagnifi
 * @see Farmer
 * @see ru.imagnifi.model.impl.FarmerImpl
 * @see ru.imagnifi.model.impl.FarmerModelImpl
 * @generated
 */
public interface FarmerModel extends BaseModel<Farmer> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a farmer model instance should use the {@link Farmer} interface instead.
     */

    /**
     * Returns the primary key of this farmer.
     *
     * @return the primary key of this farmer
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this farmer.
     *
     * @param primaryKey the primary key of this farmer
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the farmer ID of this farmer.
     *
     * @return the farmer ID of this farmer
     */
    public long getFarmerId();

    /**
     * Sets the farmer ID of this farmer.
     *
     * @param farmerId the farmer ID of this farmer
     */
    public void setFarmerId(long farmerId);

    /**
     * Returns the organization of this farmer.
     *
     * @return the organization of this farmer
     */
    @AutoEscape
    public String getOrganization();

    /**
     * Sets the organization of this farmer.
     *
     * @param organization the organization of this farmer
     */
    public void setOrganization(String organization);

    /**
     * Returns the org form of this farmer.
     *
     * @return the org form of this farmer
     */
    @AutoEscape
    public String getOrgForm();

    /**
     * Sets the org form of this farmer.
     *
     * @param orgForm the org form of this farmer
     */
    public void setOrgForm(String orgForm);

    /**
     * Returns the inn of this farmer.
     *
     * @return the inn of this farmer
     */
    public long getInn();

    /**
     * Sets the inn of this farmer.
     *
     * @param inn the inn of this farmer
     */
    public void setInn(long inn);

    /**
     * Returns the kpp of this farmer.
     *
     * @return the kpp of this farmer
     */
    public long getKpp();

    /**
     * Sets the kpp of this farmer.
     *
     * @param kpp the kpp of this farmer
     */
    public void setKpp(long kpp);

    /**
     * Returns the ogrn of this farmer.
     *
     * @return the ogrn of this farmer
     */
    public long getOgrn();

    /**
     * Sets the ogrn of this farmer.
     *
     * @param ogrn the ogrn of this farmer
     */
    public void setOgrn(long ogrn);

    /**
     * Returns the district number of this farmer.
     *
     * @return the district number of this farmer
     */
    public long getDistrictNumber();

    /**
     * Sets the district number of this farmer.
     *
     * @param districtNumber the district number of this farmer
     */
    public void setDistrictNumber(long districtNumber);

    /**
     * Returns the registration date of this farmer.
     *
     * @return the registration date of this farmer
     */
    public Date getRegistrationDate();

    /**
     * Sets the registration date of this farmer.
     *
     * @param registrationDate the registration date of this farmer
     */
    public void setRegistrationDate(Date registrationDate);

    /**
     * Returns the archive status of this farmer.
     *
     * @return the archive status of this farmer
     */
    public boolean getArchiveStatus();

    /**
     * Returns <code>true</code> if this farmer is archive status.
     *
     * @return <code>true</code> if this farmer is archive status; <code>false</code> otherwise
     */
    public boolean isArchiveStatus();

    /**
     * Sets whether this farmer is archive status.
     *
     * @param archiveStatus the archive status of this farmer
     */
    public void setArchiveStatus(boolean archiveStatus);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(ru.imagnifi.model.Farmer farmer);

    @Override
    public int hashCode();

    @Override
    public CacheModel<ru.imagnifi.model.Farmer> toCacheModel();

    @Override
    public ru.imagnifi.model.Farmer toEscapedModel();

    @Override
    public ru.imagnifi.model.Farmer toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
